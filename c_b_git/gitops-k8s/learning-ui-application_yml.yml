apiVersion: v1
kind: ConfigMap
metadata:
  name: learning-ui-config
  namespace: chalk-board-namespace
data:
  learning-ui-application.yml: |
    spring:
      application:
        name: learning-ui
      lifecycle:
        timeout-per-shutdown-phase: 15s
      thymeleaf:
        cache: false
        check-template: true
        check-template-location: true
      security:
        oauth2:
          client:
            registration:
              keycloak:
                client-name: Chalk Board UI
                client-id: gateway-client
                authorization-grant-type: authorization_code
                scope: openid,profile,email,roles
            provider:
              keycloak:
                issuer-uri: ${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI:http://chalk-keycloak:7080/realms/chalk-board}

    server:
      port: 8083
      shutdown: graceful
      tomcat:
        connection-timeout: 2s
        keep-alive-timeout: 15s
        threads:
          max: 50
          min-spare: 5

    # Configuration for calling the Learning Service
    learning:
      service:
        base-url: ${LEARNING_SERVICE_URL:http://learning-service:8081}

    logging:
      pattern:
        level: ${LOGGING_LEVEL_PATTERN_UI:"%5p [${spring.application.name},%X{trace_id},%X{span_id}]"}
      level:
        com.jsl: DEBUG
        org.springframework.web: INFO
        org.springframework.security: INFO

    management:
      endpoints:
        web:
          base-path: ${MANAGEMENT_WEB_ENDPOINT_BASE_UI:/learning-ui-management}
          exposure:
            include: ${MANAGEMENT_ENDPOINT_INCLUDE:health,info,metrics,prometheus,refresh}
      endpoint:
        health:
          show-details: when_authorized
          probes.enabled: true
      info:
        java.enabled: true
        os.enabled: true
        env.enabled: true
        git.mode: full
      
      otlp:
        metrics:
          export:
            url: ${OTEL_COLLECTOR_METRICS_URL:http://otel-collector:4318/v1/metrics}
            step: 10s
        tracing:
          endpoint: ${OTEL_COLLECTOR_TRACES_URL:http://otel-collector:4318/v1/traces}

      tracing:
        sampling:
          probability: 1.0
        enabled: true

      metrics:
        tags:
          department: ${SERVICE_DEPARTMENT_UI:ui-service}
          team: ${SERVICE_TEAM_UI:ui-service-team}
          service: ${spring.application.name}
          env: ${SERVICE_ENVIRONMENT:development}
          region: ${SERVICE_REGION:europe-west1}
          instance.id: ${SERVICE_INSTANCE_ID:instances}

        distribution:
          percentiles:
            http.server.requests: 0.99, 0.95, 0.9, 0.7, 0.5
          percentiles-histogram:
            http.server.requests: true
          minimum-expected-value:
            http.server.requests: 100ms
          maximum-expected-value:
            http.server.requests: 10s
          slo:
            http.server.requests: 300ms,500ms,1s,2s
