apiVersion: v1
kind: ConfigMap
metadata:
  name: learning-service-config
  namespace: chalk-board-namespace
data:
  application.yml: |
    spring:
      application:
        name: learning-service
      datasource:
        url: ${CHALK_BOARD_DATABASE_URL:jdbc:postgresql://postgres:5432/chalk_board}
        # These sensitive values should be handled by a Secret
        password: ${CHALK_BOARD_DATABASE_PASSWORD}
        username: ${CHALK_BOARD_DATABASE_USERNAME}
      jpa:
        hibernate:
          ddl-auto: create
        database: postgresql
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        show-sql: false
        properties:
          hibernate:
            format_sql: false
            boot:
              allow_jdbc_metadata_access: false
      servlet:
        multipart:
          max-file-size: 500MB
          max-request-size: 550MB
      mail:
        host: mail-dev
        port: 1025
        username: jay
        # This value should be handled by a Secret
        password: jay
        properties:
          mail:
            smtp:
              trust: "*"
            auth: true
            starttls:
              enable: true
            connectiontimeout: 5000
            timeout: 3000
            writetimeout: 5000
      security:
        oauth2:
          resourceserver:
            jwt:
              issuer-uri: ${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI:http://localhost:7080/realms/chalk-board}

    server:
      port: 8081
      shutdown: graceful
      forwarded-headers-strategy: framework

    springdoc:
      api-docs:
        path: /api-docs
      swagger-ui:
        path: /swagger-ui.html
        enabled: true
        try-it-out-enabled: true
        operations-sorter: method
        tags-sorter: alpha
      show-actuator: false

    info:
      application:
        file-upload:
          path: ./learning-service-videos

    logging:
      level:
        org.springframework.cloud.gateway: DEBUG
      pattern:
        level: ${LOGGING_LEVEL_PATTERN_LS:"%5p [${spring.application.name},%X{trace_id},%X{span_id}]"}

    management:
      endpoints:
        web:
          base-path: ${MANAGEMENT_WEB_ENDPOINT_BASE_LS:/learning-service-management}
          exposure:
            include: ${MANAGEMENT_ENDPOINT_INCLUDE:health,info,metrics,prometheus,refresh}
      endpoint:
        health:
          show-details: when_authorized
          probes.enabled: true
      info:
        java.enabled: true
        os.enabled: true
        env.enabled: true
        git.mode: full

      otlp:
        metrics:
          export:
            url: ${OTEL_COLLECTOR_METRICS_URL:http://otel-collector:4318/v1/metrics}
            step: 10s
        tracing:
          endpoint: ${OTEL_COLLECTOR_TRACES_URL:http://otel-collector:4318/v1/traces}

      tracing:
        sampling:
          probability: 1.0
        enabled: true

      metrics:
        tags:
          department: ${SERVICE_DEPARTMENT_LS:learning-service}
          team: ${SERVICE_TEAM_LS:learning-service-team}
          service: ${spring.application.name}
          env: ${SERVICE_ENVIRONMENT:development}
          region: ${SERVICE_REGION:europe-west1}
          instance.id: ${SERVICE_INSTANCE_ID:instances}

        distribution:
          percentiles:
            http.server.requests: 0.99, 0.95, 0.9, 0.7, 0.5
            file.upload.metric: 0.99, 0.95, 0.9, 0.7, 0.5
            create.course.metric: 0.99, 0.95, 0.9, 0.7, 0.5
            file.download.metric: 0.99, 0.95, 0.9, 0.7, 0.5
          percentiles-histogram:
            http.server.requests: true
            file.upload.metric: true
            create.course.metric: true
            file.download.metric: true
          minimum-expected-value:
            file.upload.metric: 100
            create.course.metric: 100
            http.server.requests: 100ms
            file.download.metric: 100ms
          maximum-expected-value:
            file.upload.metric: 10000
            create.course.metric: 10s
            file.download.metric: 10s
            http.server.requests: 10s
          slo:
            file.upload.metric: 300,500,1000,2000
            create.course.metric: 300,500,1000,2000
            file.download.metric: 300,500,1000,2000
            http.server.requests: 300ms,500ms,1s,2s

    application:
      file-upload:
        location: services_files
      contact:
        email: jsl-group@email.com
