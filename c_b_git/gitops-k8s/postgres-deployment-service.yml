---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-stateful
  namespace: chalk-board-namespace
  labels:
    app: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres-service
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Delete
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            # Persistent volume mount for database data
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            # Mount init.sql file from ConfigMap
            - name: postgres-config-volume
              mountPath: /docker-entrypoint-initdb.d/init.sql
              subPath: init.sql
            # Mount custom postgres.conf file from ConfigMap
            - name: postgres-config-volume
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgres-custom.conf
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: chalkboard-secret
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: chalkboard-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: chalk_board
          # Custom command and health checks
          command: ["postgres"]
          args: ["-c", "config_file=/etc/postgresql/postgresql.conf"]
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "$(POSTGRES_USER)", "-d", "$(POSTGRES_DB)"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "$(POSTGRES_USER)", "-d", "$(POSTGRES_DB)"]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: postgres-config-volume
          configMap:
            name: postgres-config
  # Dynamic PersistentVolumeClaim for database data
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "standard"
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: chalk-board-namespace
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      name: postgres
  clusterIP: None
  selector:
    app: postgres
