apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: chalk-board-namespace
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9090
              name: http
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: prometheus-data
              mountPath: /prometheus
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time=30d'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--web.enable-lifecycle'
            - '--enable-feature=exemplar-storage'
            - '--enable-feature=native-histograms'
            - '--web.enable-remote-write-receiver'
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config
        - name: prometheus-data
          emptyDir: { }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: chalk-board-namespace
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 5Gi # Adjust storage size as needed
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: chalk-board-namespace
  labels:
    app: prometheus
spec:
  type: ClusterIP # Exposes the service only within the cluster
  ports:
    - port: 9090
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: prometheus
